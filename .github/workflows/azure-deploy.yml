name: Deploy ML Project to Azure (Docker)

on:
  push:
    branches: [ azure-deploy ]  # Docker-based Azure deployment
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deploy to Azure with Docker'
        required: true
        default: 'azure'

jobs:
  # Add CI step: Testing
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: |
        uv sync

    - name: Run tests
      run: |
        uv run pytest tests/ -v --tb=short
        
    - name: Lint code
      run: |
        uv run flake8 src/ --max-line-length=88 --ignore=E203,W503

  # CD step: Deploy (only if tests pass)
  deploy:
    runs-on: ubuntu-latest
    needs: test  # Only deploy if tests pass

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Azure Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}/ml-project:latest

      - name: Deploy to Azure Container Apps
        uses: azure/container-apps-deploy-action@v1
        with:
          app-name: ml-project
          resource-group: ${{ secrets.AZURE_RESOURCE_GROUP }}
          image: ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}/ml-project:latest 